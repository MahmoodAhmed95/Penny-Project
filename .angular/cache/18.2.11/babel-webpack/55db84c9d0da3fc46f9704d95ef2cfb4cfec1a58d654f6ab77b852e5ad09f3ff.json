{"ast":null,"code":"import { Store } from '@ngrx/store';\nimport { signIn } from '../store/auth/auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class SigninComponent {\n  store;\n  email = '';\n  password = '';\n  constructor(store) {\n    this.store = store;\n  }\n  onSignIn() {\n    this.store.dispatch(signIn({\n      email: this.email,\n      password: this.password\n    }));\n  }\n  static ɵfac = function SigninComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SigninComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SigninComponent,\n    selectors: [[\"app-signin\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"Email\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", \"placeholder\", \"Password\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\"]],\n    template: function SigninComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SigninComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSignIn();\n        });\n        i0.ɵɵelementStart(1, \"input\", 1);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function SigninComponent_Template_input_ngModelChange_1_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function SigninComponent_Template_input_ngModelChange_2_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵtext(4, \"Sign In\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance();\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Store","signIn","SigninComponent","store","email","password","constructor","onSignIn","dispatch","i0","ɵɵdirectiveInject","i1","selectors","decls","vars","consts","template","SigninComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SigninComponent_Template_form_ngSubmit_0_listener","ɵɵtwoWayListener","SigninComponent_Template_input_ngModelChange_1_listener","$event","ɵɵtwoWayBindingSet","ɵɵelementEnd","SigninComponent_Template_input_ngModelChange_2_listener","ɵɵtext","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["/home/mma/Desktop/Penny-Project/apps/frontend/src/app/signin/signin.component.ts","/home/mma/Desktop/Penny-Project/apps/frontend/src/app/signin/signin.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { signIn } from '../store/auth/auth.actions';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n})\nexport class SigninComponent {\n  email = '';\n  password = '';\n\n  constructor(private store: Store) {}\n\n  onSignIn() {\n    this.store.dispatch(signIn({ email: this.email, password: this.password }));\n  }\n}\n","<form (ngSubmit)=\"onSignIn()\">\n  <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required placeholder=\"Email\" />\n  <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required placeholder=\"Password\" />\n  <button type=\"submit\">Sign In</button>\n</form>\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,MAAM,QAAQ,4BAA4B;;;AAMnD,OAAM,MAAOC,eAAe;EAINC,KAAA;EAHpBC,KAAK,GAAG,EAAE;EACVC,QAAQ,GAAG,EAAE;EAEbC,YAAoBH,KAAY;IAAZ,KAAAA,KAAK,GAALA,KAAK;EAAU;EAEnCI,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACP,MAAM,CAAC;MAAEG,KAAK,EAAE,IAAI,CAACA,KAAK;MAAEC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAE,CAAC,CAAC;EAC7E;;qCARWH,eAAe,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAX,KAAA;EAAA;;UAAfE,eAAe;IAAAU,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5BT,EAAA,CAAAW,cAAA,cAA8B;QAAxBX,EAAA,CAAAY,UAAA,sBAAAC,kDAAA;UAAA,OAAYH,GAAA,CAAAZ,QAAA,EAAU;QAAA,EAAC;QAC3BE,EAAA,CAAAW,cAAA,eAAoF;QAAhEX,EAAA,CAAAc,gBAAA,2BAAAC,wDAAAC,MAAA;UAAAhB,EAAA,CAAAiB,kBAAA,CAAAP,GAAA,CAAAf,KAAA,EAAAqB,MAAA,MAAAN,GAAA,CAAAf,KAAA,GAAAqB,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAmB;QAAvChB,EAAA,CAAAkB,YAAA,EAAoF;QACpFlB,EAAA,CAAAW,cAAA,eAAgG;QAAzEX,EAAA,CAAAc,gBAAA,2BAAAK,wDAAAH,MAAA;UAAAhB,EAAA,CAAAiB,kBAAA,CAAAP,GAAA,CAAAd,QAAA,EAAAoB,MAAA,MAAAN,GAAA,CAAAd,QAAA,GAAAoB,MAAA;UAAA,OAAAA,MAAA;QAAA,EAAsB;QAA7ChB,EAAA,CAAAkB,YAAA,EAAgG;QAChGlB,EAAA,CAAAW,cAAA,gBAAsB;QAAAX,EAAA,CAAAoB,MAAA,cAAO;QAC/BpB,EAD+B,CAAAkB,YAAA,EAAS,EACjC;;;QAHelB,EAAA,CAAAqB,SAAA,EAAmB;QAAnBrB,EAAA,CAAAsB,gBAAA,YAAAZ,GAAA,CAAAf,KAAA,CAAmB;QAChBK,EAAA,CAAAqB,SAAA,EAAsB;QAAtBrB,EAAA,CAAAsB,gBAAA,YAAAZ,GAAA,CAAAd,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}